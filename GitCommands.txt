Part 1: Installation and verification commands
After successful installation of Git, you can configure your user name and e-mail ID using the following commands.

$ git config --global user.name "First Last"
$ git config --global user.email "myemail@domain.com"

git --version 		-- To know Git version installed
touch TestFile.py 	-- To create a file exixting path
git init 		-- To initialize existing folder

Part 2: Basic Commands for making changes
git add <Filename>      -- To add file into staging
git add *.py 		-- Will add all .py files
git add . 		-- Will add all files in the folder
git status 		-- To check whether the files are in staging/local to system
git rm --cached <FileName> -- TO remove file from staging to untrack file
git commit 		--To commit changes to global repository with edit mode open
git commit -m 'changed GitCommands.txt' - To commit a file with out edit mode
clear 			-- command in gitbash to clear commands

touch .gitignore - A file created, where we can give file names we want not to add to repository
touch .gitkeep - usually git ignore empty directories to keep them traking use athis command
How to branch

how to create github

how to push code to remote

how to pull

Part 3: Git to Gihub and vice versa:
git remote - Gives all remote location details. Example: origin
git remote add origin https://github.com/drsladit/Github-LearningRepository.git
git pull URL - first time
git push - often
git push -u origin master
It asks for github credentials, if it doesn't login. Read error description.
Sometimes if central repository(Github in this case) is no where related or if push command used first time. then it throws error.

Then first use pull command to pull from central to local.
git pull origin master --allow-unrelated-histories and then push.

git clone URL to pull enter code


***----------------------***
Difference between git pull(git fetch+git merge) and git clone

---Git CLONE---
Command: git clone https://github.com/drsladit/Github-LearningRepository.git

1) If you want a copy of existing repository from github use git clone. git clone is how you get a local copy of an existing repository to work on.
2) You no need to initialise the repository when you are using git clone i.e. No need to use command git init before typing git clone URL command
3) It's usually only used once for a given repository, unless you want to have multiple working copies of it around. (Or want to get a clean copy after messing up your local one...)

---GIT PULL--

git init
git remote add origin git://github.com/cmcculloh/repo.git
git fetch --all
git pull origin master

1) git pull (or git fetch + git merge) is how you update that local copy with new commits from the remote repository. If you are collaborating with others, it is a command that you will run frequently.

As your first example shows, it is possible to emulate git clone with an assortment of other git commands, but it's not really the case that git pull is doing "basically the same thing" as git clone (or vice-versa).


***---------------------------------------***





Part 4: Git History commands
git diff 			--shows difference between recently add to staging and current file
git diff --staged  --shows changes between recent staging area to local reposit/recent commit


git log -2 						-- displays the history of last two commits
git log e3498ec27ccf0db06f09533e21e20a4da2cc691e 	-- shows the history starting from commit_id
git log GitCommands.txt					-- displays the list of commits for the file
git log --oneline --graph --decorate


git log --stat
git log --author="drsladit"
git log --since=*2021-02-01* 		--Provides commits from given to till date
git log --until-02-01* 			--Provides commits from given to till date
git log --oneline			-- Fits the log output to a single line
git log --oneline -3			-- Fits the log output to a single line and last 3 commits
git log --graph 			--Gives a graphical representation to the log output


***--------------------------------***
Topics to learn:
merging of branches
stash
commit - git reset soft and hard
checkout
branch creation 
navigating to existing branch
branch deletion
commit - cherry picking






